version: '3'
services:

 ##########################################################
  rabbitmq:
    container_name: SVLRabbitMQ
    image: rabbitmq:3-management-alpine
    volumes:
      - rappidmq:/var/lib/rabbitmq/mnesia
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - log
    environment:
      RABBITMQ_DEFAULT_USER: serveloja
      RABBITMQ_DEFAULT_PASS: 5tgb&YGVsvlm&5t
      RABBITMQ_DEFAULT_VHOST: Serveloja
  ##########################################################

  elasticsearch:
    container_name: SVLElasticSearch    
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.7.0
    environment: 
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - network.host=0.0.0.0
      - cluster.name="elastic_stack_logging"
      - node.name="elastic_stack_logging_data"
      - discovery.zen.minimum_master_nodes=1
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
    volumes: 
      - elasticsearch:/usr/share/elasticsearch/data      
    ports:
      - 9200:9200
      - 9300:9300
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://localhost:9200 || exit 1"]
      interval: 30s
      timeout: 20s
      retries: 5     
    networks:
      - log

  ##########################################################
  kibana:
    container_name: SVLKibana    
    image: docker.elastic.co/kibana/kibana-oss:6.7.0
    environment:
      - server.name=kibana
      - server.host="0"
      - elasticsearch.url=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    links:
      - elasticsearch:elasticsearch
    ports:
      - 5601:5601
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://localhost:5601/ || exit 1"]
      interval: 30s
      timeout: 20s
      retries: 5     
    networks:
      - log

  ##########################################################
  logstash:
    container_name: SVLLogStash    
    image: docker.elastic.co/logstash/logstash-oss:6.7.0
    volumes:
      - ./product.logstash.conf:/config/product.logstash.conf      
    links:
      - rabbitmq:AMQPServer
      - elasticsearch:elasticsearch
    networks:
      - log    
    command: logstash -f /config/product.logstash.conf  
    depends_on:
      - rabbitmq
      - elasticsearch
      
  ##########################################################
  metricbeat:
    container_name: SVLMetricBeat
    image: docker.elastic.co/beats/metricbeat-oss:6.7.0
    user: root
    volumes:
      - ./product.metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - elasticsearch
      - kibana
    restart: on-failure
    networks:
      - log

volumes:
  rappidmq:
  elasticsearch:

networks:
  log:
    driver: bridge
